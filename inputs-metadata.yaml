parameter_meta:
  dualrnaseq.name:
    description: Workflow name.
    group: pipeline_basics
    help: A custom name for the pipeline run. Unlike the core nextflow `-name` option
      with one hyphen this parameter can be reused multiple times, for example if
      using `-resume`. Passed through to steps such as MultiQC and used for things
      like report filenames and titles.
    hidden: false
  dualrnaseq.samplesheet:
    description: 'Input files can be read as either .fastq or .fastq.gz. They should
      be named descriptively without spaces and special characters (such as : and
      @), with the corresponding replicate (if any) appended at the end. The best
      practise for this pipeline is to use underscores to separate different experimental
      conditions.'
    group: pipeline_basics
    help: 'Use this to specify the location of your input FastQ files. For example:


      `--input ''path/to/data/sample_*_{1,2}.fastq''`


      Please note the following requirements:


      1. The path must be enclosed in quotes

      2. The path must have at least one `*` wildcard character

      3. When using the pipeline with paired end data, the path must use `{1,2}` notation
      to specify read pairs.

      4. If left unspecified, a default pattern is used: `data/*{1,2}.fastq.gz`


      Note: by default, the pipeline expects paired-end data. If you have single-end
      data, you need to specify `--single_end` on the command line when launched.
      For example: `--single_end --input ''*.fastq''`'
    hidden: false
  dualrnaseq.single_end:
    description: Specifies that the input is single-end reads.
    group: pipeline_basics
    help: 'By default, the pipeline expects paired-end data. If you have single-end
      data, you need to specify `--single_end` on the command line when you launch
      the pipeline. A normal glob pattern, enclosed in quotation marks, can then be
      used for `--input`. For example:


      ```bash

      --single_end --input ''*.fastq''

      ```


      It is not possible to run a mixture of single-end and paired-end files in one
      run.'
    hidden: false
  dualrnaseq.outdir:
    description: The output directory where the results will be saved.
    group: pipeline_basics
    help: ''
    hidden: false
  dualrnaseq.max_cpus:
    description: Maximum number of CPUs that can be requested    for any single job.
    group: pipeline_resources
    help: Use to set an upper-limit for the CPU requirement for each process. Should
      be an integer e.g. `--max_cpus 1`
    hidden: true
  dualrnaseq.max_memory:
    description: Maximum amount of memory that can be requested for any single job.
    group: pipeline_resources
    help: Use to set an upper-limit for the memory requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_memory '8.GB'`
    hidden: true
  dualrnaseq.max_time:
    description: Maximum amount of time that can be requested for any single job.
    group: pipeline_resources
    help: Use to set an upper-limit for the time requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_time '2.h'`
    hidden: true
  dualrnaseq.fasta_host:
    description: Host fasta file
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.fasta_pathogen:
    description: Pathogen fasta file
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.gff_host_genome:
    description: Host GFF file
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.gff_host_tRNA:
    description: Host GFF file for tRNAs (optional)
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.gff_pathogen:
    description: Pathogen GFF
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.transcriptome_host:
    description: Host transcriptome file
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.transcriptome_pathogen:
    description: Pathogen transcriptome file
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.read_transcriptome_fasta_host_from_file:
    description: If supplying custom transcriptome files
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.read_transcriptome_fasta_pathogen_from_file:
    description: If supplying custom transcriptome files
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.genome_host:
    description: Name of host genome in the genomes.conf file
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.genome_pathogen:
    description: Name of host genome in the genomes.conf file
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.genomes_ignore:
    description: ''
    group: genome_references_and_annotation
    help: ''
    hidden: false
  dualrnaseq.skip_fastqc:
    description: 'An option to not run FastQC. (Default: False)  This is set to False
      within the configuration files, but only needs to be passed on the command line
      to become True.'
    group: fastqc
    help: ''
    hidden: false
  dualrnaseq.fastqc_params:
    description: Define a set of additional fastqc parameters you wish to use, except
      --quiet --threads --noextract flags which are already specified in the dualrnaseq
      pipeline
    group: fastqc
    help: ''
    hidden: false
  dualrnaseq.run_cutadapt:
    description: To run Cutadapt
    group: cutadapt
    help: ''
    hidden: false
  dualrnaseq.a:
    description: Adaptor for For single-end reads as well as the first reads of paired-end
      data
    group: cutadapt
    help: ''
    hidden: false
  dualrnaseq.A:
    description: For paired-end data, the adapter sequence for the second reads can
      be defined here
    group: cutadapt
    help: ''
    hidden: false
  dualrnaseq.quality_cutoff:
    description: Cutadapt can also remove low-quality read ends. By default, the 3\u2019
      end of each read is trimmed using a cutoff of 10. If you specify two comma-separated
      cutoffs, the first value represents the 5' cutoff, and the second one the 3'
      cutoff
    group: cutadapt
    help: ''
    hidden: false
  dualrnaseq.cutadapt_params:
    description: Additional parameters if needed
    group: cutadapt
    help: Define a set of additional Cutadapt parameters you wish to use, except -m
      and -j which are already specified in the dualrnaseq pipeline.
    hidden: false
  dualrnaseq.run_bbduk:
    description: To run BBDuk
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.minlen:
    description: Reads shorter than this after trimming will be discarded
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.qtrim:
    description: To trim read ends to remove bases with quality below trimq
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.trimq:
    description: Cutoff to trim regions with average quality BELOW given value
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.ktrim:
    description: 'To trim reads to remove bases matching reference kmers. Avaiable
      options: f (don''t trim), r (trim to the right - 3'' adapters) l (trim to the
      left - 5'' adapters)'
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.k:
    description: Kmer length used for finding contaminants (adapters). Contaminants
      shorter than k will not be found. k must be at least 1
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.mink:
    description: Look for shorter kmers at read tips down to this length when k-trimming
      or masking. 0 means disabled.  Enabling this will disable maskmiddle
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.hdist:
    description: Maximum Hamming distance for ref kmers (subs only)
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.adapters:
    description: 'Fasta file with adapter sequences (Default: $baseDir/data/adapters.fa)'
    group: bbduk
    help: ''
    hidden: false
  dualrnaseq.bbduk_params:
    description: Set of additional BBDuk parameters
    group: bbduk
    help: 'Define a set of additional BBDuk parameters you wish to use, except `-Xmx1g`
      which is already specified in the dualrnaseq pipeline.


      '
    hidden: false
  dualrnaseq.libtype:
    description: Options for setting the library type. A = automatic detection
    group: salmon_general
    help: ''
    hidden: false
  dualrnaseq.incompatPrior:
    description: By default, this is set to 0.0, to ensure that only mappings or alignments
      that are compatible with the specified library type are considered by Salmon
    group: salmon_general
    help: ''
    hidden: false
  dualrnaseq.generate_salmon_uniq_ambig:
    description: Option to extract all of the unique and ambiguous reads after quantification
    group: salmon_general
    help: 'This is useful to analyse reads which multimap across or within genomes.
      This option merges the `quant.sf` file with the `aux_info/ambig_info.tsv` file,
      combining columns which show how the underlying reads were processed and assigned.
      If a read maps uniquely to a feature, then the read will be added to UniqueCount
      column. If the read maps to more than one location, it will be summed against
      each of the features and shown in the AmbigCount column. The underlying statistical
      model of Salmon is able to assign many of these multimapping reads to a specific
      feature and hence will appear in the NumReads column. The output file is located
      under the `aux_info` folder.


      Works for both Selective alignment and alignment-based modes (Default: False).'
    hidden: false
  dualrnaseq.gene_feature_gff_to_create_transcriptome_host:
    description: The pipeline uses gene features from the 3rd column of the host annotative
      file (gff3) to extract the coordinates of transcripts to be quantified.  By
      default, the pipeline useanscriptome_hosts exon from the --gff_host file and
      tRNA from the --gff_host_tRNA file
    group: salmon_general
    help: ''
    hidden: false
  dualrnaseq.gene_feature_gff_to_create_transcriptome_pathogen:
    description: The pipeline uses gene features from the 3rd column of the pathogen
      annotative fikle (gff3) to extract the coordinates of transcripts to be quantified.  By
      default, the pipeline uses features as gene, sRNA, tRNA and rRNA from the --gff_pathogen
      file.
    group: salmon_general
    help: ''
    hidden: false
  dualrnaseq.gene_attribute_gff_to_create_transcriptome_host:
    description: This flag defines the gene attribute from the 9th column of the host
      annotative (gff3) file, where the transcript names are extracted.  By default,
      the pipeline extracts transcript_id from the --gff_host file
    group: salmon_general
    help: ''
    hidden: false
  dualrnaseq.gene_attribute_gff_to_create_transcriptome_pathogen:
    description: This flag defines the gene attribute from the 9th column of the pathogen
      annotative (gff3) file, where transcript, genes or CDS regions are extracted.  By
      default, the pipeline extracts locus_tag from the --gff_pathogen file
    group: salmon_general
    help: ''
    hidden: false
  dualrnaseq.run_salmon_selective_alignment:
    description: Run Salmon selective alignment
    group: salmon_selective_alignment
    help: ''
    hidden: false
  dualrnaseq.kmer_length:
    description: To define the k-mer length (-k parameter in Salmon)
    group: salmon_selective_alignment
    help: ''
    hidden: false
  dualrnaseq.writeUnmappedNames:
    description: By default the pipeline saves names of unmapped reads
    group: salmon_selective_alignment
    help: ''
    hidden: false
  dualrnaseq.softclipOverhangs:
    description: By default, the pipeline allows soft-clipping of reads
    group: salmon_selective_alignment
    help: '"Soft-clipping allows reads that overhang the beginning or ends of the
      transcript. In this case, the overhanging section of the read will simply be
      unaligned, and will not contribute or detract from the alignment score". If
      it is set to False, the end-to-end alignment of the entire read is forced, so
      that the occurrence of any overhangings may affect the alignment score'
    hidden: false
  dualrnaseq.dumpEq:
    description: o save the equivalence classes and their counts
    group: salmon_selective_alignment
    help: ''
    hidden: false
  dualrnaseq.writeMappings:
    description: set to True, the pipeline will create a mapping.sam file containing
      mapping information
    group: salmon_selective_alignment
    help: ''
    hidden: false
  dualrnaseq.keepDuplicates:
    description: By default salmon removes/collapses identical transcripts during
      the indexing stage
    group: salmon_selective_alignment
    help: The list of both restored and removed transcripts will be saved in the `duplicate_clusters.tsv`
      file of the `transcripts_index` folder. If you want to obtain quantification
      results for all duplicates, please specify this option `--keepDuplicates`
    hidden: false
  dualrnaseq.salmon_sa_params_index:
    description: Set of additional parameters for creating an index with Salmon Selective
      Alignment
    group: salmon_selective_alignment
    help: ''
    hidden: false
  dualrnaseq.salmon_sa_params_mapping:
    description: Set of additional parameters for mapping with Salmon Selective Alignment
    group: salmon_selective_alignment
    help: ''
    hidden: false
  dualrnaseq.run_salmon_alignment_based_mode:
    description: To run Salmon alignment-based mode
    group: salmon_alignment_based_mode
    help: ''
    hidden: false
  dualrnaseq.salmon_alignment_based_params:
    description: Define a set of additional salmon quant parameters you wish to use
      in salmon alignment-based mode.
    group: salmon_alignment_based_mode
    help: ''
    hidden: false
  dualrnaseq.run_star:
    description: To run STAR
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.outSAMunmapped:
    description: By default, the pipeline saves unmapped reads within the main BAM
      file. If you want to switch off this option, set the --outSAMunmapped flag to
      None
    group: star_general
    help: For paired-end reads, the KeepPairs parameter will record the unmapped mates
      for each alignment, and will keep it adjacent to its mapped read (only affects
      multi-mapping reads).
    hidden: false
  dualrnaseq.outSAMattributes:
    description: o specify the attributes of the output BAM file. The default value
      is Standard, but there are a range of options if needed
    group: star_general
    help: By default, the pipeline uses the Standard option to keep NH HI AS nM SAM
      attributes
    hidden: false
  dualrnaseq.outFilterMultimapNmax:
    description: To specify the maximum number of loci a read is allowed to map to
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.outFilterType:
    description: "By default, the pipeline keeps reads containing junctions that passed\
      \ filtering into the file SJ.out.tab. This option reduces the number of \u201D\
      spurious\u201D junctions"
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.alignSJoverhangMin:
    description: The number of minimum overhang for unannotated junctions can be changed
      here
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.alignSJDBoverhangMin:
    description: The number of minimum overhang for annotated junctions can be changed
      here
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.outFilterMismatchNmax:
    description: To define a threshold for the number of mismatches to be allowed.
      By default, the pipeline uses a large number 999 to switch this filter off.
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.outFilterMismatchNoverReadLmax:
    description: Here, you can define a threshold for a ratio of mismatches to read
      length. The alignment will be considered if the ratio is less than or equal
      to this value
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.alignIntronMin:
    description: By default, the nf-core dualrnaseq pipeline uses 20 as a minimum
      intron length. If the genomic gap is smaller than this value, it is considered
      as a deletion
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.alignIntronMax:
    description: The maximum intron length is set to 1,000,000
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.alignMatesGapMax:
    description: The maximum genomic distance between mates is 1,000,000
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.limitBAMsortRAM:
    description: Option to limit RAM when sorting BAM file. If 0, will be set to the
      genome index size, which can be quite large when running on a desktop or laptop
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.winAnchorMultimapNmax:
    description: The maximum number of loci anchors that are allowed to map. By default,
      the pipeline uses a large number 999 to switch this filter off.
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.sjdbOverhang:
    description: 'Option to specify the length of the donor/acceptor sequence on each
      side of the junctions used in constructing the splice junctions database. By
      default the option is set to 100. However, we recommend setting a value depending
      on the read length: read/mate length - 1.'
    group: star_general
    help: ''
    hidden: false
  dualrnaseq.quantTranscriptomeBan:
    description: The nf-core/dualrnaseq pipeline runs STAR to generate transcriptomic
      alignments. By default, it allows for insertions, deletions and soft-clips (Singleend
      option). To prohibit this behaviour, please specify IndelSoftclipSingleend
    group: star_salmon_alignment_based_mode
    help: ''
    hidden: false
  dualrnaseq.star_salmon_index_params:
    description: Define additional parameters for creating an index with STAR in salmon
    group: star_salmon_alignment_based_mode
    help: ''
    hidden: false
  dualrnaseq.star_salmon_alignment_params:
    description: Define additional parameters for alignment with STAR in salmon alignment-based
      mode
    group: star_salmon_alignment_based_mode
    help: ''
    hidden: false
  dualrnaseq.outWigType:
    description: Used to generate signal outputs, such as "wiggle" and "bedGraph".
    group: star_htseq
    help: ''
    hidden: false
  dualrnaseq.outWigStrand:
    description: Options are Stranded or Unstranded when defining the strandedness
      of wiggle/bedGraph output
    group: star_htseq
    help: ''
    hidden: false
  dualrnaseq.star_index_params:
    description: Set of additional parameters for creating an index with STAR
    group: star_htseq
    help: ''
    hidden: false
  dualrnaseq.star_alignment_params:
    description: Set of additional parameters for alignment with STAR
    group: star_htseq
    help: ''
    hidden: false
  dualrnaseq.run_htseq_uniquely_mapped:
    description: Used to run HTSeq-count and extract uniquely mapped reads from both
      the host and pathogen
    group: htseq_general
    help: ''
    hidden: false
  dualrnaseq.stranded:
    description: A parameter for the library type. Options include "yes", "no" or
      "reverse"
    group: htseq_general
    help: ''
    hidden: false
  dualrnaseq.max_reads_in_buffer:
    description: Option to define the number of maximum reads allowed to stay in memory
      until the mates are found. Has an effect for paired-end reads
    group: htseq_general
    help: ''
    hidden: false
  dualrnaseq.minaqual:
    description: To specify a threshold for a minimal MAPQ alignment quality
    group: htseq_general
    help: ''
    hidden: false
  dualrnaseq.htseq_params:
    description: Set of additional parameters for HTSeq
    group: htseq_general
    help: ''
    hidden: false
  dualrnaseq.gene_feature_gff_to_quantify_host:
    description: Host - gene feature to quantify
    group: htseq_features
    help: ''
    hidden: false
  dualrnaseq.host_gff_attribute:
    description: Host - GFF attribute
    group: htseq_features
    help: ''
    hidden: false
  dualrnaseq.gene_feature_gff_to_quantify_pathogen:
    description: Pathogen - gene feature to quantify (will likely need to be modified)
    group: htseq_features
    help: ''
    hidden: false
  dualrnaseq.pathogen_gff_attribute:
    description: Pathogen - GFF attribute (Will likely need to be modified)
    group: htseq_features
    help: ''
    hidden: false
  dualrnaseq.mapping_statistics:
    description: Option to generate mapping statistics, creating plots and summaries
    group: rna_mapping_statistics
    help: "This will create the following:\n\n - Count the total number of reads before\
      \ and after trimming\n - Scatterplots comparing all replicates (separate for\
      \ both host and pathogen reads)\n - Plots of the % of mapped/quantified reads\n\
      \ - Plots of RNA-class statistics (as many types can be identified, the parameter\
      \ below `--RNA_classes_to_replace_host` can help to summarise these)"
    hidden: false
  dualrnaseq.rna_classes_to_replace_host:
    description: Tab delimited file contains headers which groups similar types of
      RNA classes together. This helps to keep the RNA-class names simplified for
      plotting purposes
    group: rna_mapping_statistics
    help: Initially, the user can run the pipeline without the 'others' class (remove
      the 'others' column) to identify the concentration of all RNA types,including
      e.g. scRNAs). Depending on the requirements, the user can decide which types
      should be included/excluded or grouped together.
    hidden: false
  dualrnaseq.publish_dir_mode:
    description: Method used to save pipeline results to output directory (please
      don't change).
    group: generic_options
    help: The Nextflow `publishDir` option specifies which intermediate files should
      be saved to the output directory. This option tells the pipeline what method
      should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir)
      for details.
    hidden: true
  dualrnaseq.email_on_fail:
    description: Email address for completion summary, only when pipeline fails.
    group: generic_options
    help: This works exactly as with `--email`, except emails are only sent if the
      workflow is not successful.
    hidden: true
  dualrnaseq.plaintext_email:
    description: Send plain-text email instead of HTML.
    group: generic_options
    help: Set to receive plain-text e-mails instead of HTML formatted.
    hidden: true
  dualrnaseq.max_multiqc_email_size:
    description: File size limit when attaching MultiQC reports to summary emails.
    group: generic_options
    help: If file generated by pipeline exceeds the threshold, it will not be attached.
    hidden: true
  dualrnaseq.monochrome_logs:
    description: Do not use coloured log outputs.
    group: generic_options
    help: Set to disable colourful command line output and live life in monochrome.
    hidden: true
  dualrnaseq.multiqc_config:
    description: Custom config file to supply to MultiQC.
    group: generic_options
    help: ''
    hidden: true
  dualrnaseq.tracedir:
    description: Directory to keep pipeline Nextflow logs and reports.
    group: generic_options
    help: ''
    hidden: true
  dualrnaseq.help:
    description: Display help text.
    group: generic_options
    help: ''
    hidden: true
  dualrnaseq.email:
    description: Email address for completion summary.
    group: generic_options
    help: Set this parameter to your e-mail address to get a summary e-mail with details
      of the run sent to you when the workflow exits. If set in your user config file
      (`~/.nextflow/config`) then you don't need to specify this on the command line
      for every run.
    hidden: true
  dualrnaseq.custom_config_version:
    description: Git commit id for Institutional configs.
    group: institutional_config_options
    help: 'Provide git commit id for custom Institutional configs hosted at `nf-core/configs`.
      This was implemented for reproducibility purposes. Default: `master`.


      ```bash

      ## Download and use config file with following git commit id

      --custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96

      ```'
    hidden: true
  dualrnaseq.custom_config_base:
    description: Base directory for Institutional configs.
    group: institutional_config_options
    help: 'If you''re running offline, nextflow will not be able to fetch the institutional
      config files from the internet. If you don''t need them, then this is not a
      problem. If you do need them, you should download the files from the repo and
      tell nextflow where to find them with the `custom_config_base` option. For example:


      ```bash

      ## Download and unzip the config files

      cd /path/to/my/configs

      wget https://github.com/nf-core/configs/archive/master.zip

      unzip master.zip


      ## Run the pipeline

      cd /path/to/my/data

      nextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/

      ```


      > Note that the nf-core/tools helper package has a `download` command to download
      all required pipeline files + singularity containers + institutional configs
      in one go for you, to make this process easier.'
    hidden: true
  dualrnaseq.hostnames:
    description: Institutional configs hostname.
    group: institutional_config_options
    help: ''
    hidden: true
  dualrnaseq.config_profile_description:
    description: Institutional config description.
    group: institutional_config_options
    help: ''
    hidden: true
  dualrnaseq.config_profile_contact:
    description: Institutional config contact information.
    group: institutional_config_options
    help: ''
    hidden: true
  dualrnaseq.config_profile_url:
    description: Institutional config URL link.
    group: institutional_config_options
    help: ''
    hidden: true
parameter_group:
  pipeline_basics:
    description: Primary parameters for runtime
    help: null
    title: Pipeline - basics
  pipeline_resources:
    description: Set the top limit for requested resources for any single job.
    help: 'If you are running on a smaller system, a pipeline step requesting more
      resources than are available may cause the Nextflow to stop the run with an
      error. These options allow you to cap the maximum resources requested by any
      single job so that the pipeline will run on your system.


      Note that you can not _increase_ the resources requested by any job using these
      options. For that you will need your own configuration file. See [the nf-core
      website](https://nf-co.re/usage/configuration) for details.'
    title: Pipeline resources
  genome_references_and_annotation:
    description: If used, the path to the files should be enclosed by quotes "../.."
    help: null
    title: Genome references and annotation
  fastqc:
    description: By default, the pipeline utilizes FastQC tool for quality control
      of raw sequencing reads
    help: null
    title: FastQC
  cutadapt:
    description: Adapter and read trimming is performed by either Cutadapt or BBDuk
      with the following related options
    help: 'Cutadapt requires prior knowledge of the adaptors used during library preparation.

      By default, the pipeline trims Illumina TruSeq adapters'
    title: Cutadapt
  bbduk:
    description: Adapter and read trimming is performed by either Cutadapt or BBDuk
      with the following related options
    help: BBDuk does not require any prior knowledge about adapter types, searching
      for common adapter sequences from the file `$baseDir/data/adapters.fa`
    title: BBDuk
  salmon_general:
    description: These parameters are available for Salmon in both Selective Alignment
      and alignment-based mode
    help: null
    title: Salmon - general
  salmon_selective_alignment:
    description: Parameters listed below are available only for Salmon with Selective
      Alignment.
    help: null
    title: Salmon - Selective alignment
  salmon_alignment_based_mode:
    description: Options for Alignment-based mode
    help: null
    title: Salmon - Alignment based mode
  star_general:
    description: These parameters are available for STAR in both quantification modes,
      using HTSeq and Salmon in alignment-based mode
    help: null
    title: STAR - general
  star_salmon_alignment_based_mode:
    description: ''
    help: null
    title: STAR - Salmon - alignment-based mode
  star_htseq:
    description: Parameters available for STAR - HTSeq
    help: null
    title: STAR - HTseq
  htseq_general:
    description: General parameters
    help: null
    title: HTSeq - general
  htseq_features:
    description: ''
    help: 'The four parameters below are used to extract gene features from both the
      host and pathogen. These values may need to be changed, especially for the pathogen,
      as many different names exist, such as `ID`, `Gene`, `Name`, `locus_tag` etc


      A good idea is to view the accompanying annotative file and examine the fields
      within.


      Note: If a host `tRNA.gff` file is included, it is assumed that it has the same
      gene attribute as the annotative (gff) file, i.e. `gene_id`'
    title: HTSeq - features
  rna_mapping_statistics:
    description: ''
    help: null
    title: RNA mapping statistics
  generic_options:
    description: Less common options for the pipeline, typically set in a config file.
    help: 'These options are common to all nf-core pipelines and allow you to customise
      some of the core preferences for how the pipeline runs.


      Typically these options would be set in a Nextflow config file loaded for all
      pipeline runs, such as `~/.nextflow/config`.'
    title: Generic options
  institutional_config_options:
    description: Parameters used to describe centralised config profiles. These should
      not be edited.
    help: The centralised nf-core configuration profiles use a handful of pipeline
      parameters to describe themselves. This information is then printed to the Nextflow
      log when you run a pipeline. You should not need to change these values when
      you run a pipeline.
    title: Institutional config options
